# Generated by Django 4.0.10 on 2024-02-26 16:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import lego.apps.content.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("users", "0041_user_linkedin_id_alter_user_github_username"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tags", "0004_auto_20200324_1859"),
    ]

    operations = [
        migrations.CreateModel(
            name="Forum",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(db_index=True, default=False, editable=False),
                ),
                ("require_auth", models.BooleanField(default=True)),
                ("slug", models.SlugField(null=True, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("text", lego.apps.content.fields.ContentField(allow_images=False)),
                ("pinned", models.BooleanField(default=False)),
                (
                    "can_edit_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_edit_%(class)s",
                        to="users.abakusgroup",
                    ),
                ),
                (
                    "can_edit_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_edit_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "can_view_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_view_%(class)s",
                        to="users.abakusgroup",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="tags.tag")),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Thread",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(db_index=True, default=False, editable=False),
                ),
                ("require_auth", models.BooleanField(default=True)),
                ("slug", models.SlugField(null=True, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("text", lego.apps.content.fields.ContentField(allow_images=False)),
                ("pinned", models.BooleanField(default=False)),
                (
                    "can_edit_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_edit_%(class)s",
                        to="users.abakusgroup",
                    ),
                ),
                (
                    "can_edit_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_edit_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "can_view_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="can_view_%(class)s",
                        to="users.abakusgroup",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "forum",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threads",
                        to="forums.forum",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="tags.tag")),
                (
                    "updated_by",
                    models.ForeignKey(
                        default=None,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
